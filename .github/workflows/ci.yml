name: Multi-Language CI

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  Build:
    name: Build (${{ matrix.language }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [Python, Nodejs]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        if: matrix.language == 'Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (Python)
        if: matrix.language == 'Python'
        run: |
          cd back-end
          pip install -r requirements.txt

      - name: Build (Python)
        if: matrix.language == 'Python'
        run: |
          cd back-end
          python -m py_compile $(find app -name "*.py")

      - name: Setup Nodejs
        if: matrix.language == 'Nodejs'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (Nodejs)
        if: matrix.language == 'Nodejs'
        run: |
          cd front-end
          npm ci

      - name: Build (Nodejs)
        if: matrix.language == 'Nodejs'
        run: |
          cd front-end
          npm run build
  
  Test:
    name: Test (${{ matrix.language }})
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      fail-fast: false
      matrix:
        language: [Python, Nodejs]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        if: matrix.language == 'Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (Python)
        if: matrix.language == 'Python'
        run: |
          cd back-end
          pip install -r requirements.txt

      - name: Run Unit & Integration Tests (Python)
        if: matrix.language == 'Python'
        run: |
          cd back-end
          pytest --junitxml=report-python.xml

      - name: Setup Nodejs
        if: matrix.language == 'Nodejs'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (Nodejs)
        if: matrix.language == 'Nodejs'
        run: |
          cd front-end
          npm ci

      - name: Run Unit & Integration Tests (Nodejs)
        if: matrix.language == 'Nodejs'
        run: |
          cd front-end
          npm run test:ci

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: ${{ matrix.language }} Tests
          path: |
            **/report-*.xml
          reporter: ${{ matrix.language == 'Python' && 'java-junit' || 'jest-junit' }}
          fail-on-error: false